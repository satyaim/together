{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleVideoUpload","event","console","log","URL","createObjectURL","target","files","ReactPlayer","canPlay","setState","videoFilePath","state","type","onChange","this","url","width","height","controls","onError","e","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA0BeA,E,kDArBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,kBAAoB,SAACC,GACnBC,QAAQC,IAAKC,IAAIC,gBAAgBJ,EAAMK,OAAOC,MAAM,IAAKC,IAAYC,QAAQL,IAAIC,gBAAgBJ,EAAMK,OAAOC,MAAM,MACpH,EAAKG,SAAS,CAACD,QAASD,IAAYC,QAAQL,IAAIC,gBAAgBJ,EAAMK,OAAOC,MAAM,OACnF,EAAKG,SAAS,CAACC,cAAeP,IAAIC,gBAAgBJ,EAAMK,OAAOC,MAAM,OANrE,EAAKK,MAAQ,CAACD,cAAe,GAAIF,SAAS,GAFzB,E,0CAWnB,WACE,OACE,gCACE,uBAAOI,KAAK,OAAOC,SAAUC,KAAKf,oBAClC,cAAC,IAAD,CAAagB,IAAKD,KAAKH,MAAMD,cAAeM,MAAM,OAAOC,OAAO,OAAOC,UAAU,EAAMC,QAAS,SAAAC,GAAC,OAAInB,QAAQC,IAAI,UAAWkB,a,GAjBlHC,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e986cf7c.chunk.js","sourcesContent":["import React from 'react'\nimport ReactPlayer from 'react-player/lazy'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {videoFilePath: \"\", canPlay: false};\n  }\n\n  handleVideoUpload = (event) => {\n    console.log( URL.createObjectURL(event.target.files[0]), ReactPlayer.canPlay(URL.createObjectURL(event.target.files[0])))\n    this.setState({canPlay: ReactPlayer.canPlay(URL.createObjectURL(event.target.files[0]))})\n    this.setState({videoFilePath: URL.createObjectURL(event.target.files[0])});\n  };\n\n  render() {\n    return (\n      <div>\n        <input type=\"file\" onChange={this.handleVideoUpload} />\n        <ReactPlayer url={this.state.videoFilePath} width=\"100%\" height=\"100%\" controls={true} onError={e => console.log('onError', e)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}